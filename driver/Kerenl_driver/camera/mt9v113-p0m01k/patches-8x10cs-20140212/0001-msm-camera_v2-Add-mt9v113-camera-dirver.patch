From 42046aad7da9ab081bfdcbe350711e08bce62fa1 Mon Sep 17 00:00:00 2001
From: Lin Zhang <zhanglin0425@thundersoft.com>
Date: Mon, 27 Jan 2014 17:19:13 +0800
Subject: [PATCH 1/3] msm: camera_v2: Add mt9v113 camera dirver

Add mt9v113 camera dirver.

Change-Id: Ie178734d1c0815694fdd24f59e9dcf4fb92df0ad
Signed-off-by: Lin Zhang <zhanglin0425@thundersoft.com>
---
 arch/arm/mach-msm/clock-8610.c                     |    4 +-
 drivers/media/platform/msm/camera_v2/Kconfig       |    9 +
 .../media/platform/msm/camera_v2/sensor/Makefile   |    1 +
 .../media/platform/msm/camera_v2/sensor/mt9v113.c  | 2064 ++++++++++++++++++++
 4 files changed, 2077 insertions(+), 1 deletions(-)
 create mode 100644 drivers/media/platform/msm/camera_v2/sensor/mt9v113.c

diff --git a/arch/arm/mach-msm/clock-8610.c b/arch/arm/mach-msm/clock-8610.c
index 89d462c..6ed05e5 100644
--- a/arch/arm/mach-msm/clock-8610.c
+++ b/arch/arm/mach-msm/clock-8610.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2012-2013, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2012-2014, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -3026,6 +3026,7 @@ static struct clk_lookup msm_clocks_8610[] = {
 	CLK_LOOKUP("cam_src_clk", mclk1_clk_src.c, "6-0078"),
 	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-0020"),
 	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-006a"),
+	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-007a"),
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-006f"),
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-0034"),
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-007d"),
@@ -3033,6 +3034,7 @@ static struct clk_lookup msm_clocks_8610[] = {
 	CLK_LOOKUP("cam_clk", mclk1_clk.c, "6-0078"),
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-0020"),
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-006a"),
+	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-007a"),
 
 
 	/* CSIPHY clocks */
diff --git a/drivers/media/platform/msm/camera_v2/Kconfig b/drivers/media/platform/msm/camera_v2/Kconfig
index 262fb38..51c2c49 100644
--- a/drivers/media/platform/msm/camera_v2/Kconfig
+++ b/drivers/media/platform/msm/camera_v2/Kconfig
@@ -191,6 +191,15 @@ config GC0339
 		Preview and snapshot resolution shall be 640*480 at 30 fps,
 		It does not support auto focus.
 
+config MT9V113
+	bool "Sensor MT9V113 (YUV .3M)"
+	depends on MSMB_CAMERA
+	---help---
+		MT9V113 is a Aptina .3 MP YUV Sensor.
+		It supports 1 or 2 mipi lanes.
+		Preview and snapshot resolution shall be 640*480 at 30 fps,
+		It does not support auto focus.
+
 config OV8825
 	bool "OmniVision OV8825 (BAYER 8MP)"
 	depends on MSMB_CAMERA
diff --git a/drivers/media/platform/msm/camera_v2/sensor/Makefile b/drivers/media/platform/msm/camera_v2/sensor/Makefile
index 280a9a0..954e53c 100644
--- a/drivers/media/platform/msm/camera_v2/sensor/Makefile
+++ b/drivers/media/platform/msm/camera_v2/sensor/Makefile
@@ -19,3 +19,4 @@ obj-$(CONFIG_OV5648) += ov5648.o
 obj-$(CONFIG_MT9M114) += mt9m114.o
 obj-$(CONFIG_SP1628) += sp1628.o
 obj-$(CONFIG_GC0339) += gc0339.o
+obj-$(CONFIG_MT9V113) += mt9v113.o
diff --git a/drivers/media/platform/msm/camera_v2/sensor/mt9v113.c b/drivers/media/platform/msm/camera_v2/sensor/mt9v113.c
new file mode 100644
index 0000000..7fcb4df
--- /dev/null
+++ b/drivers/media/platform/msm/camera_v2/sensor/mt9v113.c
@@ -0,0 +1,2064 @@
+/* Copyright (c) 2014, The Linux Foundation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ */
+#include <mach/gpiomux.h>
+
+#include "msm_sensor.h"
+#include "msm_cci.h"
+#include "msm_camera_io_util.h"
+#include "msm_camera_i2c_mux.h"
+
+#define MT9V113_SENSOR_NAME "mt9v113"
+DEFINE_MSM_MUTEX(mt9v113_mut);
+
+static struct msm_sensor_ctrl_t mt9v113_s_ctrl;
+
+static struct msm_sensor_power_setting mt9v113_power_setting[] = {
+	{
+		.seq_type = SENSOR_VREG,
+		.seq_val = CAM_VIO,
+		.config_val = 0,
+		.delay = 0,
+	},
+	{
+		.seq_type = SENSOR_VREG,
+		.seq_val = CAM_VANA,
+		.config_val = 0,
+		.delay = 5,
+	},
+	{
+		.seq_type = SENSOR_GPIO,
+		.seq_val = SENSOR_GPIO_RESET,
+		.config_val = GPIO_OUT_LOW,
+		.delay = 10,
+	},
+	{
+		.seq_type = SENSOR_GPIO,
+		.seq_val = SENSOR_GPIO_STANDBY,
+		.config_val = GPIO_OUT_HIGH,
+		.delay = 5,
+	},
+	{
+		.seq_type = SENSOR_GPIO,
+		.seq_val = SENSOR_GPIO_RESET,
+		.config_val = GPIO_OUT_HIGH,
+		.delay = 10,
+	},
+	{
+		.seq_type = SENSOR_GPIO,
+		.seq_val = SENSOR_GPIO_STANDBY,
+		.config_val = GPIO_OUT_LOW,
+		.delay = 5,
+	},
+	{
+		.seq_type = SENSOR_CLK,
+		.seq_val = SENSOR_CAM_MCLK,
+		.config_val = 24000000,
+		.delay = 5,
+	},
+
+	{
+		.seq_type = SENSOR_I2C_MUX,
+		.seq_val = 0,
+		.config_val = 0,
+		.delay = 5,
+	},
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_start_settings[] = {
+	{0x3400, 0x7a2C},
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_stop_settings[] = {
+	{0x3400, 0x7a26},
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_recommend_setting1[] = {
+	{0x098C, 0x02F0}, /* MCU_ADDRESS*/
+	{0x0990, 0x0000}, /* MCU_DATA_0*/
+	{0x098C, 0x02F2}, /* MCU_ADDRESS*/
+	{0x0990, 0x0210}, /* MCU_DATA_0*/
+	{0x098C, 0x02F4}, /* MCU_ADDRESS*/
+	{0x0990, 0x001A}, /* MCU_DATA_0*/
+	{0x098C, 0x2145}, /* MCU_ADDRESS*/
+	{0x0990, 0x02F4}, /* MCU_DATA_0*/
+	{0x098C, 0xA134}, /* MCU_ADDRESS*/
+	{0x0990, 0x0001}, /* MCU_DATA_0*/
+	{0x31E0, 0x0001}, /* PIX_DEF_ID*/
+	{0x001A, 0x0010}, /* RESET_AND_MISC_CONTROL*/
+	{0x3400, 0x7A2C}, /* MIPI_CONTROL*/
+	{0x321C, 0x8003}, /* OFIFO_CONTROL_STATUS*/
+	{0x001E, 0x0777}, /* PAD_SLEW*/
+	{0x0016, 0x42DF}, /* CLOCKS_CONTROL*/
+	/* 24MHz */
+	{0x0014, 0xB04B}, /* PLL_CONTROL*/
+	{0x0014, 0xB049}, /* PLL_CONTROL*/
+	{0x0010, 0x021C}, /*PLL Dividers=540*/
+	{0x0012, 0x0000}, /*PLL P Dividers=0*/
+};
+static struct msm_camera_i2c_reg_conf mt9v113_recommend_setting2[] = {
+	{0x098C, 0x2703}, /*Output Width (A)*/
+	{0x0990, 0x0280}, /*=640*/
+	{0x098C, 0x2705}, /*Output Height (A)*/
+	{0x0990, 0x01E0}, /*=480*/
+	{0x098C, 0x2707}, /*Output Width (B)*/
+	{0x0990, 0x0280}, /*=640*/
+	{0x098C, 0x2709}, /*Output Height (B)*/
+	{0x0990, 0x01E0}, /*=480*/
+	{0x098C, 0x270D}, /*Row Start (A)*/
+	{0x0990, 0x0000}, /*=0*/
+	{0x098C, 0x270F}, /*Column Start (A)*/
+	{0x0990, 0x0000}, /*=0*/
+	{0x098C, 0x2711}, /*Row End (A)*/
+	{0x0990, 0x01E7}, /*=487*/
+	{0x098C, 0x2713}, /*Column End (A)*/
+	{0x0990, 0x0287}, /*=647*/
+	{0x098C, 0x2715}, /*Row Speed (A)*/
+	{0x0990, 0x0001}, /*=1*/
+	{0x098C, 0x2717}, /*Read Mode (A)*/
+	{0x0990, 0x0026}, /*=38*/
+	{0x098C, 0x2719}, /*sensor_fine_correction (A)*/
+	{0x0990, 0x001A}, /*=26*/
+	{0x098C, 0x271B}, /*sensor_fine_IT_min (A)*/
+	{0x0990, 0x006B}, /*=107*/
+	{0x098C, 0x271D}, /*sensor_fine_IT_max_margin (A)*/
+	{0x0990, 0x006B}, /*=107*/
+	{0x098C, 0x271F}, /*Frame Lines (A)*/
+	{0x0990, 0x022A}, /*=554*/
+	{0x098C, 0x2721}, /*Line Length (A)*/
+	{0x0990, 0x034A}, /*=842*/
+	{0x098C, 0x2723}, /*Row Start (B)*/
+	{0x0990, 0x0000}, /*=0*/
+	{0x098C, 0x2725}, /*Column Start (B)*/
+	{0x0990, 0x0000}, /*=0*/
+	{0x098C, 0x2727}, /*Row End (B)*/
+	{0x0990, 0x01E7}, /*=487*/
+	{0x098C, 0x2729}, /*Column End (B)*/
+	{0x0990, 0x287 }, /*=647*/
+	{0x098C, 0x272B}, /*Row Speed (B)*/
+	{0x0990, 0x0001}, /*=1*/
+	{0x098C, 0x272D}, /*Read Mode (B)*/
+	{0x0990, 0x0026}, /*=38*/
+	{0x098C, 0x272F}, /*sensor_fine_correction (B)*/
+	{0x0990, 0x001A}, /*=26*/
+	{0x098C, 0x2731}, /*sensor_fine_IT_min (B)*/
+	{0x0990, 0x006B}, /*=107*/
+	{0x098C, 0x2733}, /*sensor_fine_IT_max_margin (B)*/
+	{0x0990, 0x006B}, /*=107*/
+	{0x098C, 0x2735}, /*Frame Lines (B)*/
+	{0x0990, 0x046F}, /*=1135*/
+	{0x098C, 0x2737}, /*Line Length (B)*/
+	{0x0990, 0x034A}, /*=842*/
+	{0x098C, 0x2739}, /*Crop_X0 (A)*/
+	{0x0990, 0x0000}, /*=0*/
+	{0x098C, 0x273B}, /*Crop_X1 (A)*/
+	{0x0990, 0x027F}, /*=639*/
+	{0x098C, 0x273D}, /*Crop_Y0 (A)*/
+	{0x0990, 0x0000}, /*=0*/
+	{0x098C, 0x273F}, /*Crop_Y1 (A)*/
+	{0x0990, 0x01DF}, /*=479*/
+	{0x098C, 0x2747}, /*Crop_X0 (B)*/
+	{0x0990, 0x0000}, /*=0*/
+	{0x098C, 0x2749}, /*Crop_X1 (B)*/
+	{0x0990, 0x027F}, /*=639*/
+	{0x098C, 0x274B}, /*Crop_Y0 (B)*/
+	{0x0990, 0x0000}, /*=0*/
+	{0x098C, 0x274D}, /*Crop_Y1 (B)*/
+	{0x0990, 0x01DF}, /*=479*/
+	{0x098C, 0x222D}, /*R9 Step*/
+	{0x0990, 0x008B}, /*=139*/
+	{0x098C, 0xA408}, /*search_f1_50*/
+	{0x0990, 0x0021}, /*=33*/
+	{0x098C, 0xA409}, /*search_f2_50*/
+	{0x0990, 0x0023}, /*=35*/
+	{0x098C, 0xA40A}, /*search_f1_60*/
+	{0x0990, 0x0028}, /*=40*/
+	{0x098C, 0xA40B}, /*search_f2_60*/
+	{0x0990, 0x002A}, /*=42*/
+	{0x098C, 0x2411}, /*R9_Step_60 (A)*/
+	{0x0990, 0x008B}, /*=139*/
+	{0x098C, 0x2413}, /*R9_Step_50 (A)*/
+	{0x0990, 0x00A6}, /*=166*/
+	{0x098C, 0x2415}, /*R9_Step_60 (B)*/
+	{0x0990, 0x008B}, /*=139*/
+	{0x098C, 0x2417}, /*R9_Step_50 (B)*/
+	{0x0990, 0x00A6}, /*=166*/
+	{0x098C, 0xA404}, /*FD Mode*/
+	{0x0990, 0x0010}, /*=16*/
+	{0x098C, 0xA40D}, /*Stat_min*/
+	{0x0990, 0x0002}, /*=2*/
+	{0x098C, 0xA40E}, /*Stat_max*/
+	{0x0990, 0x0003}, /*=3*/
+	{0x098C, 0xA410}, /*Min_amplitude*/
+	{0x0990, 0x000A}, /*=10*/
+	/*85% LSC*/
+	{0x3210, 0x09B0}, /* COLOR_PIPELINE_CONTROL*/
+	{0x364E, 0x0210}, /* P_GR_P0Q0*/
+	{0x3650, 0x0CCA}, /* P_GR_P0Q1*/
+	{0x3652, 0x2D12}, /* P_GR_P0Q2*/
+	{0x3654, 0xCD0C}, /* P_GR_P0Q3*/
+	{0x3656, 0xC632}, /* P_GR_P0Q4*/
+	{0x3658, 0x00D0}, /* P_RD_P0Q0*/
+	{0x365A, 0x60AA}, /* P_RD_P0Q1*/
+	{0x365C, 0x7272}, /* P_RD_P0Q2*/
+	{0x365E, 0xFE09}, /* P_RD_P0Q3*/
+	{0x3660, 0xAD72}, /* P_RD_P0Q4*/
+	{0x3662, 0x0170}, /* P_BL_P0Q0*/
+	{0x3664, 0x5DCB}, /* P_BL_P0Q1*/
+	{0x3666, 0x27D2}, /* P_BL_P0Q2*/
+	{0x3668, 0xCE4D}, /* P_BL_P0Q3*/
+	{0x366A, 0x9DB3}, /* P_BL_P0Q4*/
+	{0x366C, 0x0150}, /* P_GB_P0Q0*/
+	{0x366E, 0xB809}, /* P_GB_P0Q1*/
+	{0x3670, 0x30B2}, /* P_GB_P0Q2*/
+	{0x3672, 0x82AD}, /* P_GB_P0Q3*/
+	{0x3674, 0xC1D2}, /* P_GB_P0Q4*/
+	{0x3676, 0xC4CD}, /* P_GR_P1Q0*/
+	{0x3678, 0xBE47}, /* P_GR_P1Q1*/
+	{0x367A, 0x5E4F}, /* P_GR_P1Q2*/
+	{0x367C, 0x9F10}, /* P_GR_P1Q3*/
+	{0x367E, 0xEC30}, /* P_GR_P1Q4*/
+	{0x3680, 0x914D}, /* P_RD_P1Q0*/
+	{0x3682, 0x846A}, /* P_RD_P1Q1*/
+	{0x3684, 0x66AB}, /* P_RD_P1Q2*/
+	{0x3686, 0x20D0}, /* P_RD_P1Q3*/
+	{0x3688, 0x1714}, /* P_RD_P1Q4*/
+	{0x368A, 0x99AC}, /* P_BL_P1Q0*/
+	{0x368C, 0x5CED}, /* P_BL_P1Q1*/
+	{0x368E, 0x00B1}, /* P_BL_P1Q2*/
+	{0x3690, 0x716C}, /* P_BL_P1Q3*/
+	{0x3692, 0x9594}, /* P_BL_P1Q4*/
+	{0x3694, 0xA22D}, /* P_GB_P1Q0*/
+	{0x3696, 0xB88A}, /* P_GB_P1Q1*/
+	{0x3698, 0x02B0}, /* P_GB_P1Q2*/
+	{0x369A, 0xC38F}, /* P_GB_P1Q3*/
+	{0x369C, 0x2B30}, /* P_GB_P1Q4*/
+	{0x369E, 0x6B32}, /* P_GR_P2Q0*/
+	{0x36A0, 0x128C}, /* P_GR_P2Q1*/
+	{0x36A2, 0x2574}, /* P_GR_P2Q2*/
+	{0x36A4, 0xD1B3}, /* P_GR_P2Q3*/
+	{0x36A6, 0xC2B8}, /* P_GR_P2Q4*/
+	{0x36A8, 0x1893}, /* P_RD_P2Q0*/
+	{0x36AA, 0x8DB0}, /* P_RD_P2Q1*/
+	{0x36AC, 0x2134}, /* P_RD_P2Q2*/
+	{0x36AE, 0x9014}, /* P_RD_P2Q3*/
+	{0x36B0, 0xFC57}, /* P_RD_P2Q4*/
+	{0x36B2, 0x2DB2}, /* P_BL_P2Q0*/
+	{0x36B4, 0x8FB1}, /* P_BL_P2Q1*/
+	{0x36B6, 0x9832}, /* P_BL_P2Q2*/
+	{0x36B8, 0x1CD4}, /* P_BL_P2Q3*/
+	{0x36BA, 0xE437}, /* P_BL_P2Q4*/
+	{0x36BC, 0x5992}, /* P_GB_P2Q0*/
+	{0x36BE, 0x99AF}, /* P_GB_P2Q1*/
+	{0x36C0, 0x0F54}, /* P_GB_P2Q2*/
+	{0x36C2, 0x9A52}, /* P_GB_P2Q3*/
+	{0x36C4, 0xB358}, /* P_GB_P2Q4*/
+	{0x36C6, 0xC3EE}, /* P_GR_P3Q0*/
+	{0x36C8, 0xC3F1}, /* P_GR_P3Q1*/
+	{0x36CA, 0x94D2}, /* P_GR_P3Q2*/
+	{0x36CC, 0x4175}, /* P_GR_P3Q3*/
+	{0x36CE, 0x4EB7}, /* P_GR_P3Q4*/
+	{0x36D0, 0xF310}, /* P_RD_P3Q0*/
+	{0x36D2, 0x0C51}, /* P_RD_P3Q1*/
+	{0x36D4, 0x6C75}, /* P_RD_P3Q2*/
+	{0x36D6, 0xDA96}, /* P_RD_P3Q3*/
+	{0x36D8, 0x8FF9}, /* P_RD_P3Q4*/
+	{0x36DA, 0x9C10}, /* P_BL_P3Q0*/
+	{0x36DC, 0x99B2}, /* P_BL_P3Q1*/
+	{0x36DE, 0xFCD4}, /* P_BL_P3Q2*/
+	{0x36E0, 0x6CD5}, /* P_BL_P3Q3*/
+	{0x36E2, 0x7E98}, /* P_BL_P3Q4*/
+	{0x36E4, 0xE64E}, /* P_GB_P3Q0*/
+	{0x36E6, 0x8E72}, /* P_GB_P3Q1*/
+	{0x36E8, 0x38D2}, /* P_GB_P3Q2*/
+	{0x36EA, 0x4935}, /* P_GB_P3Q3*/
+	{0x36EC, 0xBCB6}, /* P_GB_P3Q4*/
+	{0x36EE, 0xB5F3}, /* P_GR_P4Q0*/
+	{0x36F0, 0xBAD4}, /* P_GR_P4Q1*/
+	{0x36F2, 0x8E39}, /* P_GR_P4Q2*/
+	{0x36F4, 0x1FF8}, /* P_GR_P4Q3*/
+	{0x36F6, 0x1D3C}, /* P_GR_P4Q4*/
+	{0x36F8, 0x8CB3}, /* P_RD_P4Q0*/
+	{0x36FA, 0x8834}, /* P_RD_P4Q1*/
+	{0x36FC, 0xBF58}, /* P_RD_P4Q2*/
+	{0x36FE, 0x4239}, /* P_RD_P4Q3*/
+	{0x3700, 0x19F9}, /* P_RD_P4Q4*/
+	{0x3702, 0x770D}, /* P_BL_P4Q0*/
+	{0x3704, 0x7234}, /* P_BL_P4Q1*/
+	{0x3706, 0xCB98}, /* P_BL_P4Q2*/
+	{0x3708, 0x84B9}, /* P_BL_P4Q3*/
+	{0x370A, 0x33FC}, /* P_BL_P4Q4*/
+	{0x370C, 0xA1D2}, /* P_GB_P4Q0*/
+	{0x370E, 0xAE33}, /* P_GB_P4Q1*/
+	{0x3710, 0x8E79}, /* P_GB_P4Q2*/
+	{0x3712, 0x4AB8}, /* P_GB_P4Q3*/
+	{0x3714, 0x2D1C}, /* P_GB_P4Q4*/
+	{0x3644, 0x013C}, /* POLY_ORIGIN_C*/
+	{0x3642, 0x00E8}, /* POLY_ORIGIN_R*/
+	{0x3210, 0x09B8}, /* COLOR_PIPELINE_CONTROL*/
+	/* Char Setting and fine-tuning*/
+	{0x098C, 0xAB1F}, /* MCU_ADDRESS [HG_LLMODE]*/
+	{0x0990, 0x00C7}, /* MCU_DATA_0*/
+	{0x098C, 0xAB31}, /* MCU_ADDRESS [HG_NR_STOP_G]*/
+	{0x0990, 0x001E}, /* MCU_DATA_0*/
+	{0x098C, 0x274F}, /* MCU_ADDRESS [RESERVED_MODE_4F]*/
+	{0x0990, 0x0004}, /* MCU_DATA_0*/
+	{0x098C, 0x2741}, /* MCU_ADDRESS [RESERVED_MODE_41]*/
+	{0x0990, 0x0004}, /* MCU_DATA_0*/
+	{0x098C, 0xAB20}, /* MCU_ADDRESS [HG_LL_SAT1]*/
+	{0x0990, 0x0054}, /* MCU_DATA_0*/
+	{0x098C, 0xAB21}, /* MCU_ADDRESS [HG_LL_INTERPTHRESH1]*/
+	{0x0990, 0x0046}, /* MCU_DATA_0*/
+	{0x098C, 0xAB22}, /* MCU_ADDRESS [HG_LL_APCORR1]*/
+	{0x0990, 0x0002}, /* MCU_DATA_0*/
+	{0x098C, 0xAB24}, /* MCU_ADDRESS [HG_LL_SAT2]*/
+	{0x0990, 0x0005}, /* MCU_DATA_0*/
+	{0x098C, 0x2B28}, /* MCU_ADDRESS [HG_LL_BRIGHTNESSSTART]*/
+	{0x0990, 0x170C}, /* MCU_DATA_0*/
+	{0x098C, 0x2B2A}, /* MCU_ADDRESS [HG_LL_BRIGHTNESSSTOP]*/
+	{0x0990, 0x3E80}, /* MCU_DATA_0*/
+	{0x3210, 0x09B8}, /* COLOR_PIPELINE_CONTROL*/
+	{0x098C, 0x2306}, /* MCU_ADDRESS [AWB_CCM_L_0]*/
+	{0x0990, 0x0315}, /* MCU_DATA_0*/
+	{0x098C, 0x2308}, /* MCU_ADDRESS [AWB_CCM_L_1]*/
+	{0x0990, 0xFDDC}, /* MCU_DATA_0*/
+	{0x098C, 0x230A}, /* MCU_ADDRESS [AWB_CCM_L_2]*/
+	{0x0990, 0x003A}, /* MCU_DATA_0*/
+	{0x098C, 0x230C}, /* MCU_ADDRESS [AWB_CCM_L_3]*/
+	{0x0990, 0xFF58}, /* MCU_DATA_0*/
+	{0x098C, 0x230E}, /* MCU_ADDRESS [AWB_CCM_L_4]*/
+	{0x0990, 0x02B7}, /* MCU_DATA_0*/
+	{0x098C, 0x2310}, /* MCU_ADDRESS [AWB_CCM_L_5]*/
+	{0x0990, 0xFF31}, /* MCU_DATA_0*/
+	{0x098C, 0x2312}, /* MCU_ADDRESS [AWB_CCM_L_6]*/
+	{0x0990, 0xFF4C}, /* MCU_DATA_0*/
+	{0x098C, 0x2314}, /* MCU_ADDRESS [AWB_CCM_L_7]*/
+	{0x0990, 0xFE4C}, /* MCU_DATA_0*/
+	{0x098C, 0x2316}, /* MCU_ADDRESS [AWB_CCM_L_8]*/
+	{0x0990, 0x039E}, /* MCU_DATA_0*/
+	{0x098C, 0x2318}, /* MCU_ADDRESS [AWB_CCM_L_9]*/
+	{0x0990, 0x001C}, /* MCU_DATA_0*/
+	{0x098C, 0x231A}, /* MCU_ADDRESS [AWB_CCM_L_10]*/
+	{0x0990, 0x0039}, /* MCU_DATA_0*/
+	{0x098C, 0x231C}, /* MCU_ADDRESS [AWB_CCM_RL_0]*/
+	{0x0990, 0x007F}, /* MCU_DATA_0*/
+	{0x098C, 0x231E}, /* MCU_ADDRESS [AWB_CCM_RL_1]*/
+	{0x0990, 0xFF77}, /* MCU_DATA_0*/
+	{0x098C, 0x2320}, /* MCU_ADDRESS [AWB_CCM_RL_2]*/
+	{0x0990, 0x000A}, /* MCU_DATA_0*/
+	{0x098C, 0x2322}, /* MCU_ADDRESS [AWB_CCM_RL_3]*/
+	{0x0990, 0x0020}, /* MCU_DATA_0*/
+	{0x098C, 0x2324}, /* MCU_ADDRESS [AWB_CCM_RL_4]*/
+	{0x0990, 0x001B}, /* MCU_DATA_0*/
+	{0x098C, 0x2326}, /* MCU_ADDRESS [AWB_CCM_RL_5]*/
+	{0x0990, 0xFFC6}, /* MCU_DATA_0*/
+	{0x098C, 0x2328}, /* MCU_ADDRESS [AWB_CCM_RL_6]*/
+	{0x0990, 0x0086}, /* MCU_DATA_0*/
+	{0x098C, 0x232A}, /* MCU_ADDRESS [AWB_CCM_RL_7]*/
+	{0x0990, 0x00B5}, /* MCU_DATA_0*/
+	{0x098C, 0x232C}, /* MCU_ADDRESS [AWB_CCM_RL_8]*/
+	{0x0990, 0xFEC3}, /* MCU_DATA_0*/
+	{0x098C, 0x232E}, /* MCU_ADDRESS [AWB_CCM_RL_9]*/
+	{0x0990, 0x0001}, /* MCU_DATA_0*/
+	{0x098C, 0x2330}, /* MCU_ADDRESS [AWB_CCM_RL_10]*/
+	{0x0990, 0xFFEF}, /* MCU_DATA_0*/
+	{0x098C, 0xA348}, /* MCU_ADDRESS [AWB_GAIN_BUFFER_SPEED]*/
+	{0x0990, 0x0008}, /* MCU_DATA_0*/
+	{0x098C, 0xA349}, /* MCU_ADDRESS [AWB_JUMP_DIVISOR]*/
+	{0x0990, 0x0002}, /* MCU_DATA_0*/
+	{0x098C, 0xA34A}, /* MCU_ADDRESS [AWB_GAIN_MIN]*/
+	{0x0990, 0x0090}, /* MCU_DATA_0*/
+	{0x098C, 0xA34B}, /* MCU_ADDRESS [AWB_GAIN_MAX]*/
+	{0x0990, 0x00FF}, /* MCU_DATA_0*/
+	{0x098C, 0xA34C}, /* MCU_ADDRESS [AWB_GAINMIN_B]*/
+	{0x0990, 0x0075}, /* MCU_DATA_0*/
+	{0x098C, 0xA34D}, /* MCU_ADDRESS [AWB_GAINMAX_B]*/
+	{0x0990, 0x00EF}, /* MCU_DATA_0*/
+	{0x098C, 0xA351}, /* MCU_ADDRESS [AWB_CCM_POSITION_MIN]*/
+	{0x0990, 0x0000}, /* MCU_DATA_0*/
+	{0x098C, 0xA352}, /* MCU_ADDRESS [AWB_CCM_POSITION_MAX]*/
+	{0x0990, 0x007F}, /* MCU_DATA_0*/
+	{0x098C, 0xA354}, /* MCU_ADDRESS [AWB_SATURATION]*/
+	{0x0990, 0x0043}, /* MCU_DATA_0*/
+	{0x098C, 0xA355}, /* MCU_ADDRESS [AWB_MODE]*/
+	{0x0990, 0x0001}, /* MCU_DATA_0*/
+	{0x098C, 0xA35D}, /* MCU_ADDRESS [AWB_STEADY_BGAIN_OUT_MIN]*/
+	{0x0990, 0x0078}, /* MCU_DATA_0*/
+	{0x098C, 0xA35E}, /* MCU_ADDRESS [AWB_STEADY_BGAIN_OUT_MAX]*/
+	{0x0990, 0x0086}, /* MCU_DATA_0*/
+	{0x098C, 0xA35F}, /* MCU_ADDRESS [AWB_STEADY_BGAIN_IN_MIN]*/
+	{0x0990, 0x007E}, /* MCU_DATA_0*/
+	{0x098C, 0xA360}, /* MCU_ADDRESS [AWB_STEADY_BGAIN_IN_MAX]*/
+	{0x0990, 0x0082}, /* MCU_DATA_0*/
+	{0x098C, 0x2361}, /* MCU_ADDRESS [AWB_CNT_PXL_TH]*/
+	{0x0990, 0x0040}, /* MCU_DATA_0*/
+	{0x098C, 0xA363}, /* MCU_ADDRESS [AWB_TG_MIN0]*/
+	{0x0990, 0x00D2}, /* MCU_DATA_0*/
+	{0x098C, 0xA364}, /* MCU_ADDRESS [AWB_TG_MAX0]*/
+	{0x0990, 0x00F6}, /* MCU_DATA_0*/
+	{0x098C, 0xA302}, /* MCU_ADDRESS [AWB_WINDOW_POS]*/
+	{0x0990, 0x0000}, /* MCU_DATA_0*/
+	{0x098C, 0xA303}, /* MCU_ADDRESS [AWB_WINDOW_SIZE]*/
+	{0x0990, 0x00EF}, /* MCU_DATA_0*/
+	{0x098C, 0xAB20}, /* MCU_ADDRESS [HG_LL_SAT1]*/
+	{0x0990, 0x0024}, /* MCU_DATA_0*/
+	/* AE Setting Frame rate 7.5fps ~ 30fps*/
+	{0x098C, 0xA20C}, /* MCU_ADDRESS*/
+	{0x0990, 0x0004}, /* AE_MAX_INDEX*/
+	{0x098C, 0xA215}, /* MCU_ADDRESS*/
+	{0x0990, 0x0004}, /* AE_INDEX_TH23*/
+	{0x098C, 0xA20D}, /* MCU_ADDRESS [AE_MIN_VIRTGAIN]*/
+	{0x0990, 0x0030}, /* MCU_DATA_0*/
+	{0x098C, 0xA20E}, /* MCU_ADDRESS [AE_MAX_VIRTGAIN]*/
+	{0x0990, 0x0080}, /* MCU_DATA_0*/
+	/* Sharpness*/
+	{0x098C, 0xAB22}, /* MCU_ADDRESS [HG_LL_APCORR1]*/
+	{0x0990, 0x0001}, /* MCU_DATA_0*/
+	/* AE Gate*/
+	{0x098C, 0xA207}, /* MCU_ADDRESS [AE_GATE]*/
+	{0x0990, 0x0006}, /* MCU_DATA_0*/
+	/* AE Target*/
+	{0x098C, 0xA24F}, /* MCU_ADDRESS [AE_BASETARGET]*/
+	{0x0990, 0x0044}, /* MCU_DATA_0*/
+	{0x098C, 0xAB3C}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+	{0x0990, 0x0000}, /* MCU_DATA_0*/
+	{0x098C, 0xAB3D}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+	{0x0990, 0x0007}, /* MCU_DATA_0*/
+	{0x098C, 0xAB3E}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+	{0x0990, 0x0016}, /* MCU_DATA_0*/
+	{0x098C, 0xAB3F}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+	{0x0990, 0x0039}, /* MCU_DATA_0*/
+	{0x098C, 0xAB40}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+	{0x0990, 0x005F}, /* MCU_DATA_0*/
+	{0x098C, 0xAB41}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+	{0x0990, 0x007A}, /* MCU_DATA_0*/
+	{0x098C, 0xAB42}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+	{0x0990, 0x008F}, /* MCU_DATA_0*/
+	{0x098C, 0xAB43}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+	{0x0990, 0x00A1}, /* MCU_DATA_0*/
+	{0x098C, 0xAB44}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+	{0x0990, 0x00AF}, /* MCU_DATA_0*/
+	{0x098C, 0xAB45}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+	{0x0990, 0x00BB}, /* MCU_DATA_0*/
+	{0x098C, 0xAB46}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+	{0x0990, 0x00C6}, /* MCU_DATA_0*/
+	{0x098C, 0xAB47}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+	{0x0990, 0x00CF}, /* MCU_DATA_0*/
+	{0x098C, 0xAB48}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+	{0x0990, 0x00D8}, /* MCU_DATA_0*/
+	{0x098C, 0xAB49}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+	{0x0990, 0x00E0}, /* MCU_DATA_0*/
+	{0x098C, 0xAB4A}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+	{0x0990, 0x00E7}, /* MCU_DATA_0*/
+	{0x098C, 0xAB4B}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+	{0x0990, 0x00EE}, /* MCU_DATA_0*/
+	{0x098C, 0xAB4C}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+	{0x0990, 0x00F4}, /* MCU_DATA_0*/
+	{0x098C, 0xAB4D}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+	{0x0990, 0x00FA}, /* MCU_DATA_0*/
+	{0x098C, 0xAB4E}, /* MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+	{0x0990, 0x00FF}, /* MCU_DATA_0*/
+	/* saturation*/
+	{0x098C, 0xAB20}, /* MCU_ADDRESS [HG_LL_SAT1]*/
+	{0x0990, 0x0045}, /* MCU_DATA_0*/
+	{0x098C, 0xAB24}, /* MCU_ADDRESS [HG_LL_SAT2]*/
+	{0x0990, 0x0034}, /* MCU_DATA_0*/
+	{0x098C, 0xA20C}, /* MCU_ADDRESS*/
+	{0x0990, 0x0018}, /* AE_MAX_INDEX*/
+	{0x098C, 0xA215}, /* MCU_ADDRESS*/
+	{0x0990, 0x0008}, /* AE_INDEX_TH23*/
+	{0x098C, 0xA20C}, /* MCU_ADDRESS*/
+	{0x0990, 0x0018}, /* AE_MAX_INDEX*/
+	{0x098C, 0xA215}, /* MCU_ADDRESS*/
+	{0x0990, 0x0018}, /* AE_INDEX_TH23*/
+	{0x098C, 0xA34A}, /* MCU_ADDRESS*/
+	{0x0990, 0x007A}, /* MCU_DATA_0*/
+	{0x098C, 0xA103}, /* MCU_ADDRESS*/
+};
+static struct msm_camera_i2c_reg_conf mt9v113_recommend_setting3[] = {
+	{0x098C, 0xA244},
+	{0x0990, 0x00BB},
+	{0x3400, 0x7a26},
+};
+
+static struct v4l2_subdev_info mt9v113_subdev_info[] = {
+	{
+		.code = V4L2_MBUS_FMT_YUYV8_2X8,
+		.colorspace = V4L2_COLORSPACE_JPEG,
+		.fmt = 1,
+		.order = 0,
+	},
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_saturation[11][2] = {
+	{
+/*Saturation x0.25*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x0.5*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x0015},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x0.75*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x0025},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x0.75*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x0035},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x1 (Default)*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x0045},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x1.25*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x0050},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x1.5*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x0060},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x1.25*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x0070},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x1.5*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x007f},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x1.75*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x008f},/*MCU_DATA_0*/
+	},
+	{
+/*Saturation x2.0*/
+		{0x098C, 0xAB20},/*MCU_ADDRESS [HG_LL_SAT1]*/
+		{0x0990, 0x009f},/*MCU_DATA_0*/
+	},
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_contrast[11][38] = {
+	{
+/*Contrast -5*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x006F},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x0080},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x0092},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x00A8},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x00B6},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x00C1},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x00CA},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x00D2},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x00D8},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00DE},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00E3},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00E8},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00ED},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00F1},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00F5},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00F8},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00FC},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+		},
+	{
+/*Contrast -4*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x006F},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x0080},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x0092},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x00A8},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x00B6},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x00C1},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x00CA},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x00D2},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x00D8},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00DE},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00E3},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00E8},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00ED},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00F1},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00F5},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00F8},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00FC},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+	{
+/*Contrast -3*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x0038},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x0060},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x0079},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x0094},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x00A6},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x00B3},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x00BD},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x00C7},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x00CF},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00D6},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00DC},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00E2},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00E8},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00ED},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00F2},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00F7},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00FB},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+	{
+/*Contrast -2*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x002C},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x004F},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x0069},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x0085},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x0098},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x00A6},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x00B2},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x00BD},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x00C6},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00CE},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00D6},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00DD},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00E4},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00EA},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00EF},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00F5},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00FA},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+	{
+/*Contrast -1*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x001B},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x0035},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x004E},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x006B},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x0080},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x0090},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x009E},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x00AB},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x00B6},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00C0},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00CA},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00D3},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00DB},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00E3},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00EA},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00F2},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00F8},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+	{
+/*Contrast (Default)*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x0007},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x0016},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x0039},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x005F},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x007A},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x008F},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x00A1},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x00AF},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00C6},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00CF},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00D8},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00E0},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00E7},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00EE},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00F4},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00FA},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+	{
+/*Contrast 1*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x000F},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x0027},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x0048},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x0062},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x0078},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x008C},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x009D},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x00AB},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00B8},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00C4},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00CF},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00D8},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00E1},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00E9},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00F1},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00F8},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+	{
+/*Contrast 2*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x0003},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x000A},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x001B},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x0038},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x004F},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x0064},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x0078},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x008B},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x009C},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00AB},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00B9},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00C5},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00D1},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00DB},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00E5},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00EE},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00F7},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+	{
+/*Contrast 3*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x0002},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x0007},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x0015},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x002D},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x0043},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x0058},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x006D},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x0083},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x0097},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00A8},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00B7},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00C5},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00D1},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00DC},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00E5},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00EF},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00F7},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+	{
+/*Contrast 4*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x0002},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x0004},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x000E},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x0023},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x0038},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x004C},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x0061},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x0078},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x008E},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00A2},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00B3},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00C2},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00CF},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00DA},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00E5},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00EE},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00F7},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+	{
+/*Contrast 5*/
+		{0x098C, 0xAB3C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_0]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xAB3D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_1]*/
+		{0x0990, 0x0002},/*MCU_DATA_0*/
+		{0x098C, 0xAB3E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_2]*/
+		{0x0990, 0x0004},/*MCU_DATA_0*/
+		{0x098C, 0xAB3F},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_3]*/
+		{0x0990, 0x000E},/*MCU_DATA_0*/
+		{0x098C, 0xAB40},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_4]*/
+		{0x0990, 0x0023},/*MCU_DATA_0*/
+		{0x098C, 0xAB41},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_5]*/
+		{0x0990, 0x0038},/*MCU_DATA_0*/
+		{0x098C, 0xAB42},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_6]*/
+		{0x0990, 0x004C},/*MCU_DATA_0*/
+		{0x098C, 0xAB43},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_7]*/
+		{0x0990, 0x0061},/*MCU_DATA_0*/
+		{0x098C, 0xAB44},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_8]*/
+		{0x0990, 0x0078},/*MCU_DATA_0*/
+		{0x098C, 0xAB45},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_9]*/
+		{0x0990, 0x008E},/*MCU_DATA_0*/
+		{0x098C, 0xAB46},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_10]*/
+		{0x0990, 0x00A2},/*MCU_DATA_0*/
+		{0x098C, 0xAB47},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_11]*/
+		{0x0990, 0x00B3},/*MCU_DATA_0*/
+		{0x098C, 0xAB48},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_12]*/
+		{0x0990, 0x00C2},/*MCU_DATA_0*/
+		{0x098C, 0xAB49},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_13]*/
+		{0x0990, 0x00CF},/*MCU_DATA_0*/
+		{0x098C, 0xAB4A},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_14]*/
+		{0x0990, 0x00DA},/*MCU_DATA_0*/
+		{0x098C, 0xAB4B},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_15]*/
+		{0x0990, 0x00E5},/*MCU_DATA_0*/
+		{0x098C, 0xAB4C},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_16]*/
+		{0x0990, 0x00EE},/*MCU_DATA_0*/
+		{0x098C, 0xAB4D},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_17]*/
+		{0x0990, 0x00F7},/*MCU_DATA_0*/
+		{0x098C, 0xAB4E},/*MCU_ADDRESS [HG_GAMMA_TABLE_A_18]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+	},
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_sharpness[7][2] = {
+	{
+		{0x098C, 0xAB22},/*MCU_ADDRESS [HG_LL_APCORR1]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+	}, /* SHARPNESS LEVEL 0*/
+	{
+		{0x098C, 0xAB22},/*MCU_ADDRESS [HG_LL_APCORR1]*/
+		{0x0990, 0x0001},/*MCU_DATA_0*/
+	}, /* SHARPNESS LEVEL 1*/
+	{
+		{0x098C, 0xAB22},/*MCU_ADDRESS [HG_LL_APCORR1]*/
+		{0x0990, 0x0002},/*MCU_DATA_0*/
+	}, /* SHARPNESS LEVEL 2 Default*/
+	{
+		{0x098C, 0xAB22},/*MCU_ADDRESS [HG_LL_APCORR1]*/
+		{0x0990, 0x0003},/*MCU_DATA_0*/
+	}, /* SHARPNESS LEVEL 3*/
+	{
+		{0x098C, 0xAB22},/*MCU_ADDRESS [HG_LL_APCORR1]*/
+		{0x0990, 0x0004},/*MCU_DATA_0*/
+	}, /* SHARPNESS LEVEL 4*/
+	{
+		{0x098C, 0xAB22},/*MCU_ADDRESS [HG_LL_APCORR1]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+	}, /* SHARPNESS LEVEL 5*/
+	{
+		{0x098C, 0xAB22},/*MCU_ADDRESS [HG_LL_APCORR1]*/
+		{0x0990, 0x0006},/*MCU_DATA_0*/
+	}, /* SHARPNESS LEVEL 6*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_iso[7][10] = {
+	/* auto */
+	{
+/*ISO Auto*/
+	{0x098C, 0xA20E},
+	{0x0990, 0x0080},
+	{0x098C, 0xA103},
+	{0x0990, 0x0005},
+	},
+	/* auto hjt */
+	{
+	{0x098C, 0xA20E},
+	{0x0990, 0x0080},
+	{0x098C, 0xA103},
+	{0x0990, 0x0005},
+	},
+	/* iso 100 */
+	{
+		/*ISO 100*/
+	{0x098C, 0xA20E},
+	{0x0990, 0x0026},
+	{0x098C, 0xA103},
+	{0x0990, 0x0005},
+	},
+	/* iso 200 */
+	{
+	/*ISO 200*/
+	{0x098C, 0xA20E},
+	{0x0990, 0x0046},
+	{0x098C, 0xA103},
+	{0x0990, 0x0005},
+	},
+	/* iso 400 */
+	{
+	/*ISO 400*/
+	{0x098C, 0xA20E},
+	{0x0990, 0x0078},
+	{0x098C, 0xA103},
+	{0x0990, 0x0005},
+	},
+	/* iso 800 */
+	{
+	/*ISO 800*/
+	{0x098C, 0xA20E},
+	{0x0990, 0x00A0},
+	{0x098C, 0xA103},
+	{0x0990, 0x0005},
+	},
+	/* iso 1600 */
+	{
+	/*ISO 1600*/
+	{0x098C, 0xA20E},
+	{0x0990, 0x00C0},
+	{0x098C, 0xA103},
+	{0x0990, 0x0005},
+	},
+};
+
+static struct msm_camera_i2c_reg_conf
+mt9v113_reg_exposure_compensation[5][4] = {
+	/* -2 */
+	{
+/*Exposure Compensation 1.7EV*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+		{0x098C, 0xA24F},/*MCU_ADDRESS[AE_BASETARGET]*/
+		{0x0990, 0x0018},/*MCU_DATA_0*/
+	},
+	/* -1 */
+	{
+/*Exposure Compensation 1.0EV*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+		{0x098C, 0xA24F},/*MCU_ADDRESS[AE_BASETARGET]*/
+		{0x0990, 0x002f},/*MCU_DATA_0*/
+	},
+	/* 0 */
+	{
+/*Exposure Compensation default*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+		{0x098C, 0xA24F},/*MCU_ADDRESS[AE_BASETARGET]*/
+		{0x0990, 0x0044},/*MCU_DATA_0*/
+	},
+	/* 1 */
+	{
+/*Exposure Compensation -1.0EV*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+		{0x098C, 0xA24F},/*MCU_ADDRESS[AE_BASETARGET]*/
+		{0x0990, 0x0060},/*MCU_DATA_0*/
+	},
+	/* 2 */
+	{
+/*Exposure Compensation -1.7EV*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+		{0x098C, 0xA24F},/*MCU_ADDRESS[AE_BASETARGET]*/
+		{0x0990, 0x0080},/*MCU_DATA_0*/
+	},
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_antibanding[][6] = {
+	/* OFF */
+	{
+/*Auto-XCLK24MHz*/
+		{0x098C, 0xA404},/*MCU_ADDRESS[FD_MODE]*/
+		{0x0990, 0x0050},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0006},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+	},
+	/* 50Hz */
+	{
+/*Band 50Hz*/
+		{0x098C, 0xA404},/*MCU_ADDRESS[FD_MODE]*/
+		{0x0990, 0x00F0},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0006},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+	},
+	/* 60Hz */
+	{
+/*Band 60Hz*/
+		{0x098C, 0xA404},/*MCU_ADDRESS[FD_MODE]*/
+		{0x0990, 0x00B0},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0006},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+	},
+	/* AUTO */
+	{
+/*Auto-XCLK24MHz*/
+		{0x098C, 0xA404},/*MCU_ADDRESS[FD_MODE]*/
+		{0x0990, 0x0050},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0006},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+	},
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_effect_normal[] = {
+	/* normal: */
+/*CAMERA_EFFECT_OFF*/
+		{0x098C, 0x2759},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_A]*/
+		{0x0990, 0x6440},/*MCU_DATA_0*/
+		{0x098C, 0x275B},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_B]*/
+		{0x0990, 0x6440},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_effect_black_white[] = {
+	/* B&W: */
+/*CAMERA_EFFECT_MONO*/
+		{0x098C, 0x2759},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_A]*/
+		{0x0990, 0x6441},/*MCU_DATA_0*/
+		{0x098C, 0x275B},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_B]*/
+		{0x0990, 0x6441},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_effect_negative[] = {
+	/* Negative: */
+/*CAMERA_EFFECT_NEGATIVE*/
+		{0x098C, 0x2759},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_A]*/
+		{0x0990, 0x6443},/*MCU_DATA_0*/
+		{0x098C, 0x275B},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_B]*/
+		{0x0990, 0x6443},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf
+mt9v113_reg_effect_old_movie[] = {
+/*CAMERA_EFFECT_SEPIA*/
+		{0x098C, 0x2763},/*MCU_ADDRESS[MODE]*/
+		{0x0990, 0xB023},/*MCU_DATA_0*/
+		{0x098C, 0x2759},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_A]*/
+		{0x0990, 0x6442},/*MCU_DATA_0*/
+		{0x098C, 0x275B},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_B]*/
+		{0x0990, 0x6442},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_effect_solarize[] = {
+/*CAMERA_EFFECT_SOLARIZE*/
+		{0x098C, 0x2759},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_A]*/
+		{0x0990, 0x6444},/*MCU_DATA_0*/
+		{0x098C, 0x275B},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_B]*/
+		{0x0990, 0x6444},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_effect_aqua[] = {
+/*CAMERA_EFFECT_AQUA*/
+		{0x098C, 0x2763},/*MCU_ADDRESS[MODE]*/
+		{0x0990, 0xC0C0},/*MCU_DATA_0*/
+		{0x098C, 0x2759},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_A]*/
+		{0x0990, 0x6442},/*MCU_DATA_0*/
+		{0x098C, 0x275B},/*MCU_ADDRESS[MODE_SPEC_EFFECTS_B]*/
+		{0x0990, 0x6442},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_wb_auto[] = {
+/*CAMERA_WB_AUTO*/
+		{0x098C, 0xA34A},/*MCU_ADDRESS[AWB_GAIN_MIN]*/
+		{0x0990, 0x0090},/*MCU_DATA_0*/
+		{0x098C, 0xA34B},/*MCU_ADDRESS[AWB_GAIN_MAX]*/
+		{0x0990, 0x00FF},/*MCU_DATA_0*/
+		{0x098C, 0xA34C},/*MCU_ADDRESS[AWB_GAINMIN_B]*/
+		{0x0990, 0x0075},/*MCU_DATA_0*/
+		{0x098C, 0xA34D},/*MCU_ADDRESS[AWB_GAINMAX_B]*/
+		{0x0990, 0x00EF},/*MCU_DATA_0*/
+		{0x098C, 0xA351},/*MCU_ADDRESS[AWB_CCM_POSITION_MIN]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xA352},/*MCU_ADDRESS[AWB_CCM_POSITION_MAX]*/
+		{0x0990, 0x007F},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_wb_sunny[] = {
+/*CAMERA_WB_DAYLIGHT*/
+		{0x098C, 0xA34A},/*MCU_ADDRESS[AWB_GAIN_MIN]*/
+		{0x0990, 0x00E0},/*MCU_DATA_0*/
+		{0x098C, 0xA34B},/*MCU_ADDRESS[AWB_GAIN_MAX]*/
+		{0x0990, 0x00E0},/*MCU_DATA_0*/
+		{0x098C, 0xA34C},/*MCU_ADDRESS[AWB_GAINMIN_B]*/
+		{0x0990, 0x007D},/*MCU_DATA_0*/
+		{0x098C, 0xA34D},/*MCU_ADDRESS[AWB_GAINMAX_B]*/
+		{0x0990, 0x007D},/*MCU_DATA_0*/
+		{0x098C, 0xA351},/*MCU_ADDRESS[AWB_CCM_POSITION_MIN]*/
+		{0x0990, 0x007F},/*MCU_DATA_0*/
+		{0x098C, 0xA352},/*MCU_ADDRESS[AWB_CCM_POSITION_MAX]*/
+		{0x0990, 0x007F},/*MCU_DATA_0*/
+		{0x098C, 0xA34E},/*MCU_ADDRESS[AWB_GAIN_R]*/
+		{0x0990, 0x00E0},/*MCU_DATA_0*/
+		{0x098C, 0xA350},/*MCU_ADDRESS[AWB_GAIN_B]*/
+		{0x0990, 0x007D},/*MCU_DATA_0*/
+		{0x098C, 0xA353},/*MCU_ADDRESS[AWB_CCM_POSITION]*/
+		{0x0990, 0x007F},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_wb_cloudy[] = {
+/*CAMERA_WB_CLOUDY_DAYLIGHT*/
+		{0x098C, 0xA34A},/*MCU_ADDRESS[AWB_GAIN_MIN]*/
+		{0x0990, 0x00EA},/*MCU_DATA_0*/
+		{0x098C, 0xA34B},/*MCU_ADDRESS[AWB_GAIN_MAX]*/
+		{0x0990, 0x00EA},/*MCU_DATA_0*/
+		{0x098C, 0xA34C},/*MCU_ADDRESS[AWB_GAINMIN_B]*/
+		{0x0990, 0x0072},/*MCU_DATA_0*/
+		{0x098C, 0xA34D},/*MCU_ADDRESS[AWB_GAINMAX_B]*/
+		{0x0990, 0x0072},/*MCU_DATA_0*/
+		{0x098C, 0xA351},/*MCU_ADDRESS[AWB_CCM_POSITION_MIN]*/
+		{0x0990, 0x007F},/*MCU_DATA_0*/
+		{0x098C, 0xA352},/*MCU_ADDRESS[AWB_CCM_POSITION_MAX]*/
+		{0x0990, 0x007F},/*MCU_DATA_0*/
+		{0x098C, 0xA34E},/*MCU_ADDRESS[AWB_GAIN_R]*/
+		{0x0990, 0x00EA},/*MCU_DATA_0*/
+		{0x098C, 0xA350},/*MCU_ADDRESS[AWB_GAIN_B]*/
+		{0x0990, 0x0072},/*MCU_DATA_0*/
+		{0x098C, 0xA353},/*MCU_ADDRESS[AWB_CCM_POSITION]*/
+		{0x0990, 0x007F},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_wb_office[] = {
+/*CAMERA_WB_FLUORESCENT*/
+		{0x098C, 0xA34A},/*MCU_ADDRESS[AWB_GAIN_MIN]*/
+		{0x0990, 0x00C3},/*MCU_DATA_0*/
+		{0x098C, 0xA34B},/*MCU_ADDRESS[AWB_GAIN_MAX]*/
+		{0x0990, 0x00C3},/*MCU_DATA_0*/
+		{0x098C, 0xA34C},/*MCU_ADDRESS[AWB_GAINMIN_B]*/
+		{0x0990, 0x0084},/*MCU_DATA_0*/
+		{0x098C, 0xA34D},/*MCU_ADDRESS[AWB_GAINMAX_B]*/
+		{0x0990, 0x0084},/*MCU_DATA_0*/
+		{0x098C, 0xA351},/*MCU_ADDRESS[AWB_CCM_POSITION_MIN]*/
+		{0x0990, 0x002F},/*MCU_DATA_0*/
+		{0x098C, 0xA352},/*MCU_ADDRESS[AWB_CCM_POSITION_MAX]*/
+		{0x0990, 0x002F},/*MCU_DATA_0*/
+		{0x098C, 0xA34E},/*MCU_ADDRESS[AWB_GAIN_R]*/
+		{0x0990, 0x00C3},/*MCU_DATA_0*/
+		{0x098C, 0xA350},/*MCU_ADDRESS[AWB_GAIN_B]*/
+		{0x0990, 0x0084},/*MCU_DATA_0*/
+		{0x098C, 0xA353},/*MCU_ADDRESS[AWB_CCM_POSITION]*/
+		{0x0990, 0x002F},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static struct msm_camera_i2c_reg_conf mt9v113_reg_wb_home[] = {
+/*CAMERA_WB_INCANDESCENT*/
+		{0x098C, 0xA34A},/*MCU_ADDRESS[AWB_GAIN_MIN]*/
+		{0x0990, 0x0090},/*MCU_DATA_0*/
+		{0x098C, 0xA34B},/*MCU_ADDRESS[AWB_GAIN_MAX]*/
+		{0x0990, 0x0090},/*MCU_DATA_0*/
+		{0x098C, 0xA34C},/*MCU_ADDRESS[AWB_GAINMIN_B]*/
+		{0x0990, 0x008B},/*MCU_DATA_0*/
+		{0x098C, 0xA34D},/*MCU_ADDRESS[AWB_GAINMAX_B]*/
+		{0x0990, 0x008B},/*MCU_DATA_0*/
+		{0x098C, 0xA351},/*MCU_ADDRESS[AWB_CCM_POSITION_MIN]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xA352},/*MCU_ADDRESS[AWB_CCM_POSITION_MAX]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xA34E},/*MCU_ADDRESS[AWB_GAIN_R]*/
+		{0x0990, 0x0090},/*MCU_DATA_0*/
+		{0x098C, 0xA350},/*MCU_ADDRESS[AWB_GAIN_B]*/
+		{0x0990, 0x008B},/*MCU_DATA_0*/
+		{0x098C, 0xA353},/*MCU_ADDRESS[AWB_CCM_POSITION]*/
+		{0x0990, 0x0000},/*MCU_DATA_0*/
+		{0x098C, 0xA103},/*MCU_ADDRESS[SEQ_CMD]*/
+		{0x0990, 0x0005},/*MCU_DATA_0*/
+		{0x098C, 0xA244},/*MCU_ADDRESS[AE_DRTFEATURECTRL]*/
+		{0x0990, 0x00BB},/*MCU_DATA_0*/
+};
+
+static const struct i2c_device_id mt9v113_i2c_id[] = {
+	{MT9V113_SENSOR_NAME, (kernel_ulong_t)&mt9v113_s_ctrl},
+	{ }
+};
+
+static int32_t msm_mt9v113_i2c_probe(struct i2c_client *client,
+	const struct i2c_device_id *id)
+{
+	return msm_sensor_i2c_probe(client, id, &mt9v113_s_ctrl);
+}
+
+static struct i2c_driver mt9v113_i2c_driver = {
+	.id_table = mt9v113_i2c_id,
+	.probe		= msm_mt9v113_i2c_probe,
+	.driver = {
+		.name = MT9V113_SENSOR_NAME,
+	},
+};
+
+static struct msm_camera_i2c_client mt9v113_sensor_i2c_client = {
+	.addr_type = MSM_CAMERA_I2C_WORD_ADDR,
+};
+
+static const struct of_device_id mt9v113_dt_match[] = {
+	{.compatible = "qcom,mt9v113", .data = &mt9v113_s_ctrl},
+	{}
+};
+
+MODULE_DEVICE_TABLE(of, mt9v113_dt_match);
+
+static struct platform_driver mt9v113_platform_driver = {
+	.driver = {
+		.name = "qcom,mt9v113",
+		.owner = THIS_MODULE,
+		.of_match_table = mt9v113_dt_match,
+	},
+};
+
+static int32_t mt9v113_platform_probe(struct platform_device *pdev)
+{
+	int32_t rc;
+	const struct of_device_id *match;
+	pr_info("%s, E.", __func__);
+	match = of_match_device(mt9v113_dt_match, &pdev->dev);
+	rc = msm_sensor_platform_probe(pdev, match->data);
+	return rc;
+}
+
+static int __init mt9v113_init_module(void)
+{
+	int32_t rc;
+	pr_info("%s:%d\n", __func__, __LINE__);
+	rc = platform_driver_probe(&mt9v113_platform_driver,
+		mt9v113_platform_probe);
+	if (!rc)
+		return rc;
+	pr_info("%s:%d rc %d\n", __func__, __LINE__, rc);
+	return i2c_add_driver(&mt9v113_i2c_driver);
+}
+
+static void __exit mt9v113_exit_module(void)
+{
+	pr_info("%s:%d\n", __func__, __LINE__);
+	if (mt9v113_s_ctrl.pdev) {
+		msm_sensor_free_sensor_data(&mt9v113_s_ctrl);
+		platform_driver_unregister(&mt9v113_platform_driver);
+	} else
+		i2c_del_driver(&mt9v113_i2c_driver);
+	return;
+}
+
+static void mt9v113_i2c_write_table(struct msm_sensor_ctrl_t *s_ctrl,
+		struct msm_camera_i2c_reg_conf *table,
+		int num)
+{
+	int i = 0;
+	int rc = 0;
+	for (i = 0; i < num; ++i) {
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->
+			i2c_write(
+			s_ctrl->sensor_i2c_client, table->reg_addr,
+			table->reg_data,
+			MSM_CAMERA_I2C_WORD_DATA);
+		if (rc < 0) {
+			msleep(100);
+			rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->
+			i2c_write(
+				s_ctrl->sensor_i2c_client, table->reg_addr,
+				table->reg_data,
+				MSM_CAMERA_I2C_WORD_DATA);
+		}
+		table++;
+	}
+}
+
+static void mt9v113_set_stauration(struct msm_sensor_ctrl_t *s_ctrl, int value)
+{
+	pr_debug("%s %d", __func__, value);
+	mt9v113_i2c_write_table(s_ctrl, &mt9v113_reg_saturation[value][0],
+		ARRAY_SIZE(mt9v113_reg_saturation[value]));
+}
+
+static void mt9v113_set_contrast(struct msm_sensor_ctrl_t *s_ctrl, int value)
+{
+	pr_debug("%s %d", __func__, value);
+	mt9v113_i2c_write_table(s_ctrl, &mt9v113_reg_contrast[value][0],
+		ARRAY_SIZE(mt9v113_reg_contrast[value]));
+}
+
+static void mt9v113_set_sharpness(struct msm_sensor_ctrl_t *s_ctrl, int value)
+{
+	int val = value / 6;
+	pr_debug("%s %d : %d", __func__, value, val);
+	mt9v113_i2c_write_table(s_ctrl, &mt9v113_reg_sharpness[val][0],
+		ARRAY_SIZE(mt9v113_reg_sharpness[val]));
+}
+
+
+static void mt9v113_set_iso(struct msm_sensor_ctrl_t *s_ctrl, int value)
+{
+	pr_debug("%s %d", __func__, value);
+	mt9v113_i2c_write_table(s_ctrl, &mt9v113_reg_iso[value][0],
+		ARRAY_SIZE(mt9v113_reg_iso[value]));
+}
+
+static void mt9v113_set_exposure_compensation(struct msm_sensor_ctrl_t *s_ctrl,
+	int value)
+{
+	int val = (value + 12) / 6;
+	pr_debug("%s %d : %d", __func__, value, val);
+	mt9v113_i2c_write_table(s_ctrl,
+		&mt9v113_reg_exposure_compensation[val][0],
+		ARRAY_SIZE(mt9v113_reg_exposure_compensation[val]));
+}
+
+static void mt9v113_set_effect(struct msm_sensor_ctrl_t *s_ctrl, int value)
+{
+	pr_debug("%s %d", __func__, value);
+	switch (value) {
+	case MSM_CAMERA_EFFECT_MODE_OFF: {
+		mt9v113_i2c_write_table(s_ctrl, &mt9v113_reg_effect_normal[0],
+			ARRAY_SIZE(mt9v113_reg_effect_normal));
+		break;
+	}
+	case MSM_CAMERA_EFFECT_MODE_MONO: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_effect_black_white[0],
+			ARRAY_SIZE(mt9v113_reg_effect_black_white));
+		break;
+	}
+	case MSM_CAMERA_EFFECT_MODE_NEGATIVE: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_effect_negative[0],
+			ARRAY_SIZE(mt9v113_reg_effect_negative));
+		break;
+	}
+	case MSM_CAMERA_EFFECT_MODE_SEPIA: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_effect_old_movie[0],
+			ARRAY_SIZE(mt9v113_reg_effect_old_movie));
+		break;
+	}
+	case MSM_CAMERA_EFFECT_MODE_SOLARIZE: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_effect_solarize[0],
+			ARRAY_SIZE(mt9v113_reg_effect_solarize));
+		break;
+	}
+	case MSM_CAMERA_EFFECT_MODE_AQUA: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_effect_aqua[0],
+			ARRAY_SIZE(mt9v113_reg_effect_aqua));
+		break;
+	}
+	default:
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_effect_normal[0],
+			ARRAY_SIZE(mt9v113_reg_effect_normal));
+	}
+}
+
+static void mt9v113_set_antibanding(struct msm_sensor_ctrl_t *s_ctrl, int value)
+{
+	pr_debug("%s %d", __func__, value);
+	mt9v113_i2c_write_table(s_ctrl,
+		&mt9v113_reg_antibanding[value][0],
+		ARRAY_SIZE(mt9v113_reg_antibanding[value]));
+}
+
+static void mt9v113_set_white_balance_mode(struct msm_sensor_ctrl_t *s_ctrl,
+	int value)
+{
+	pr_debug("%s %d", __func__, value);
+	switch (value) {
+	case MSM_CAMERA_WB_MODE_AUTO: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_wb_auto[0],
+			ARRAY_SIZE(mt9v113_reg_wb_auto));
+		break;
+	}
+	case MSM_CAMERA_WB_MODE_INCANDESCENT: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_wb_home[0],
+			ARRAY_SIZE(mt9v113_reg_wb_home));
+		break;
+	}
+	case MSM_CAMERA_WB_MODE_DAYLIGHT: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_wb_sunny[0],
+			ARRAY_SIZE(mt9v113_reg_wb_sunny));
+					break;
+	}
+	case MSM_CAMERA_WB_MODE_FLUORESCENT: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_wb_office[0],
+			ARRAY_SIZE(mt9v113_reg_wb_office));
+					break;
+	}
+	case MSM_CAMERA_WB_MODE_CLOUDY_DAYLIGHT: {
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_wb_cloudy[0],
+			ARRAY_SIZE(mt9v113_reg_wb_cloudy));
+					break;
+	}
+	default:
+		mt9v113_i2c_write_table(s_ctrl,
+			&mt9v113_reg_wb_auto[0],
+			ARRAY_SIZE(mt9v113_reg_wb_auto));
+	}
+}
+
+int32_t mt9v113_sensor_config(struct msm_sensor_ctrl_t *s_ctrl,
+	void __user *argp)
+{
+	struct sensorb_cfg_data *cdata = (struct sensorb_cfg_data *)argp;
+	long rc = 0;
+	int32_t i = 0;
+	mutex_lock(s_ctrl->msm_sensor_mutex);
+	pr_info("%s:%d %s cfgtype = %d\n", __func__, __LINE__,
+		s_ctrl->sensordata->sensor_name, cdata->cfgtype);
+	switch (cdata->cfgtype) {
+	case CFG_GET_SENSOR_INFO:
+		memcpy(cdata->cfg.sensor_info.sensor_name,
+			s_ctrl->sensordata->sensor_name,
+			sizeof(cdata->cfg.sensor_info.sensor_name));
+		cdata->cfg.sensor_info.session_id =
+			s_ctrl->sensordata->sensor_info->session_id;
+		for (i = 0; i < SUB_MODULE_MAX; i++)
+			cdata->cfg.sensor_info.subdev_id[i] =
+				s_ctrl->sensordata->sensor_info->subdev_id[i];
+		pr_info("%s:%d sensor name %s\n", __func__, __LINE__,
+			cdata->cfg.sensor_info.sensor_name);
+		pr_info("%s:%d session id %d\n", __func__, __LINE__,
+			cdata->cfg.sensor_info.session_id);
+		for (i = 0; i < SUB_MODULE_MAX; i++)
+			pr_info("%s:%d subdev_id[%d] %d\n",
+				__func__, __LINE__, i,
+				cdata->cfg.sensor_info.subdev_id[i]);
+
+		break;
+	case CFG_SET_INIT_SETTING:
+		/* Write Recommend settings */
+		pr_debug("%s, sensor write init setting!!", __func__);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x0018, 0x4028,
+			MSM_CAMERA_I2C_WORD_DATA);
+		usleep_range(10000, 20000);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x001A, 0x0011,
+			MSM_CAMERA_I2C_WORD_DATA);
+		usleep_range(10000, 20000);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x001A, 0x0010,
+			MSM_CAMERA_I2C_WORD_DATA);
+		usleep_range(10000, 20000);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x0018, 0x4028,
+			MSM_CAMERA_I2C_WORD_DATA);
+		usleep_range(10000, 20000);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->
+			i2c_write_conf_tbl(s_ctrl->sensor_i2c_client,
+			mt9v113_recommend_setting1,
+			ARRAY_SIZE(mt9v113_recommend_setting1),
+			MSM_CAMERA_I2C_WORD_DATA);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x0014, 0x244B,
+			MSM_CAMERA_I2C_WORD_DATA);
+		usleep_range(1000, 2000);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x0014, 0x304B,
+			MSM_CAMERA_I2C_WORD_DATA);
+		usleep_range(10000, 20000);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x0014, 0xB04A,
+			MSM_CAMERA_I2C_WORD_DATA);
+		usleep_range(1000, 2000);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->
+			i2c_write_conf_tbl(s_ctrl->sensor_i2c_client,
+			mt9v113_recommend_setting2,
+			ARRAY_SIZE(mt9v113_recommend_setting2),
+			MSM_CAMERA_I2C_WORD_DATA);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x0990, 0x0006,
+			MSM_CAMERA_I2C_WORD_DATA);
+		usleep_range(20000, 30000);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x098C, 0xA103,
+			MSM_CAMERA_I2C_WORD_DATA);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write(
+			s_ctrl->sensor_i2c_client, 0x0990, 0x0005,
+			MSM_CAMERA_I2C_WORD_DATA);
+		usleep_range(20000, 30000);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->
+			i2c_write_conf_tbl(s_ctrl->sensor_i2c_client,
+			mt9v113_recommend_setting3,
+			ARRAY_SIZE(mt9v113_recommend_setting3),
+			MSM_CAMERA_I2C_WORD_DATA);
+		break;
+	case CFG_SET_RESOLUTION:
+		break;
+	case CFG_SET_STOP_STREAM:
+		pr_debug("%s, sensor stop stream!!", __func__);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->
+			i2c_write_conf_tbl(s_ctrl->sensor_i2c_client,
+			mt9v113_stop_settings,
+			ARRAY_SIZE(mt9v113_stop_settings),
+			MSM_CAMERA_I2C_WORD_DATA);
+		break;
+	case CFG_SET_START_STREAM:
+		pr_debug("%s, sensor start stream!!", __func__);
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->
+			i2c_write_conf_tbl(s_ctrl->sensor_i2c_client,
+			mt9v113_start_settings,
+			ARRAY_SIZE(mt9v113_start_settings),
+			MSM_CAMERA_I2C_WORD_DATA);
+		break;
+	case CFG_GET_SENSOR_INIT_PARAMS:
+		cdata->cfg.sensor_init_params =
+			*s_ctrl->sensordata->sensor_init_params;
+		pr_debug("%s:%d init params mode %d pos %d mount %d\n",
+			__func__, __LINE__,
+			cdata->cfg.sensor_init_params.modes_supported,
+			cdata->cfg.sensor_init_params.position,
+			cdata->cfg.sensor_init_params.sensor_mount_angle);
+		break;
+	case CFG_SET_SLAVE_INFO: {
+		struct msm_camera_sensor_slave_info sensor_slave_info;
+		struct msm_sensor_power_setting_array *power_setting_array;
+		int slave_index = 0;
+		if (copy_from_user(&sensor_slave_info,
+			(void *)cdata->cfg.setting,
+			sizeof(struct msm_camera_sensor_slave_info))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		/* Update sensor slave address */
+		if (sensor_slave_info.slave_addr) {
+			s_ctrl->sensor_i2c_client->cci_client->sid =
+				sensor_slave_info.slave_addr >> 1;
+		}
+
+		/* Update sensor address type */
+		s_ctrl->sensor_i2c_client->addr_type =
+			sensor_slave_info.addr_type;
+
+		/* Update power up / down sequence */
+		s_ctrl->power_setting_array =
+			sensor_slave_info.power_setting_array;
+		power_setting_array = &s_ctrl->power_setting_array;
+		power_setting_array->power_setting = kzalloc(
+			power_setting_array->size *
+			sizeof(struct msm_sensor_power_setting), GFP_KERNEL);
+		if (!power_setting_array->power_setting) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -ENOMEM;
+			break;
+		}
+		if (copy_from_user(power_setting_array->power_setting,
+			(void *)sensor_slave_info.power_setting_array.
+			power_setting,
+			power_setting_array->size *
+			sizeof(struct msm_sensor_power_setting))) {
+			kfree(power_setting_array->power_setting);
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		s_ctrl->free_power_setting = true;
+		pr_info("%s sensor id %x\n", __func__,
+			sensor_slave_info.slave_addr);
+		pr_info("%s sensor addr type %d\n", __func__,
+			sensor_slave_info.addr_type);
+		pr_info("%s sensor reg %x\n", __func__,
+			sensor_slave_info.sensor_id_info.sensor_id_reg_addr);
+		pr_info("%s sensor id %x\n", __func__,
+			sensor_slave_info.sensor_id_info.sensor_id);
+		for (slave_index = 0;
+			slave_index < power_setting_array->size;
+			slave_index++) {
+			pr_info("%s i %d power setting %d %d %ld %d\n",
+			__func__, slave_index,
+			power_setting_array->power_setting[slave_index].
+			seq_type,
+			power_setting_array->power_setting[slave_index].
+			seq_val,
+			power_setting_array->power_setting[slave_index].
+			config_val,
+			power_setting_array->power_setting[slave_index].
+			delay);
+		}
+		kfree(power_setting_array->power_setting);
+		break;
+	}
+	case CFG_WRITE_I2C_ARRAY: {
+		struct msm_camera_i2c_reg_setting conf_array;
+		struct msm_camera_i2c_reg_array *reg_setting = NULL;
+
+		if (copy_from_user(&conf_array,
+			(void *)cdata->cfg.setting,
+			sizeof(struct msm_camera_i2c_reg_setting))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+
+		reg_setting = kzalloc(conf_array.size *
+			(sizeof(struct msm_camera_i2c_reg_array)), GFP_KERNEL);
+		if (!reg_setting) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -ENOMEM;
+			break;
+		}
+		if (copy_from_user(reg_setting, (void *)conf_array.reg_setting,
+			conf_array.size *
+			sizeof(struct msm_camera_i2c_reg_array))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			kfree(reg_setting);
+			rc = -EFAULT;
+			break;
+		}
+
+		conf_array.reg_setting = reg_setting;
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->i2c_write_table(
+			s_ctrl->sensor_i2c_client, &conf_array);
+		kfree(reg_setting);
+		break;
+	}
+	case CFG_WRITE_I2C_SEQ_ARRAY: {
+		struct msm_camera_i2c_seq_reg_setting conf_array;
+		struct msm_camera_i2c_seq_reg_array *reg_setting = NULL;
+
+		if (copy_from_user(&conf_array,
+			(void *)cdata->cfg.setting,
+			sizeof(struct msm_camera_i2c_seq_reg_setting))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+
+		reg_setting = kzalloc(conf_array.size *
+			(sizeof(struct msm_camera_i2c_seq_reg_array)),
+			GFP_KERNEL);
+		if (!reg_setting) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -ENOMEM;
+			break;
+		}
+		if (copy_from_user(reg_setting, (void *)conf_array.reg_setting,
+			conf_array.size *
+			sizeof(struct msm_camera_i2c_seq_reg_array))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			kfree(reg_setting);
+			rc = -EFAULT;
+			break;
+		}
+
+		conf_array.reg_setting = reg_setting;
+		rc = s_ctrl->sensor_i2c_client->i2c_func_tbl->
+			i2c_write_seq_table(s_ctrl->sensor_i2c_client,
+			&conf_array);
+		kfree(reg_setting);
+		break;
+	}
+
+	case CFG_POWER_UP:
+		if (s_ctrl->func_tbl->sensor_power_up)
+			rc = s_ctrl->func_tbl->sensor_power_up(s_ctrl);
+		else
+			rc = -EFAULT;
+		break;
+
+	case CFG_POWER_DOWN:
+		if (s_ctrl->func_tbl->sensor_power_down)
+			rc = s_ctrl->func_tbl->sensor_power_down(s_ctrl);
+		else
+			rc = -EFAULT;
+		break;
+
+	case CFG_SET_STOP_STREAM_SETTING: {
+		struct msm_camera_i2c_reg_setting *stop_setting =
+			&s_ctrl->stop_setting;
+		struct msm_camera_i2c_reg_array *reg_setting = NULL;
+		if (copy_from_user(stop_setting, (void *)cdata->cfg.setting,
+			sizeof(struct msm_camera_i2c_reg_setting))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+
+		reg_setting = stop_setting->reg_setting;
+		stop_setting->reg_setting = kzalloc(stop_setting->size *
+			(sizeof(struct msm_camera_i2c_reg_array)), GFP_KERNEL);
+		if (!stop_setting->reg_setting) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -ENOMEM;
+			break;
+		}
+		if (copy_from_user(stop_setting->reg_setting,
+			(void *)reg_setting, stop_setting->size *
+			sizeof(struct msm_camera_i2c_reg_array))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			kfree(stop_setting->reg_setting);
+			stop_setting->reg_setting = NULL;
+			stop_setting->size = 0;
+			rc = -EFAULT;
+			break;
+		}
+		break;
+	}
+	case CFG_SET_SATURATION: {
+		int32_t sat_lev;
+		if (copy_from_user(&sat_lev, (void *)cdata->cfg.setting,
+			sizeof(int32_t))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		pr_debug("%s: Saturation Value is %d", __func__, sat_lev);
+		mt9v113_set_stauration(s_ctrl, sat_lev);
+		break;
+	}
+	case CFG_SET_CONTRAST: {
+		int32_t con_lev;
+		if (copy_from_user(&con_lev, (void *)cdata->cfg.setting,
+			sizeof(int32_t))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		pr_debug("%s: Contrast Value is %d", __func__, con_lev);
+		mt9v113_set_contrast(s_ctrl, con_lev);
+		break;
+	}
+	case CFG_SET_SHARPNESS: {
+		int32_t shp_lev;
+		if (copy_from_user(&shp_lev, (void *)cdata->cfg.setting,
+			sizeof(int32_t))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		pr_debug("%s: Sharpness Value is %d", __func__, shp_lev);
+		mt9v113_set_sharpness(s_ctrl, shp_lev);
+		break;
+	}
+	case CFG_SET_ISO: {
+		int32_t iso_lev;
+		if (copy_from_user(&iso_lev, (void *)cdata->cfg.setting,
+			sizeof(int32_t))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		pr_debug("%s: ISO Value is %d", __func__, iso_lev);
+		mt9v113_set_iso(s_ctrl, iso_lev);
+		break;
+	}
+	case CFG_SET_EXPOSURE_COMPENSATION: {
+		int32_t ec_lev;
+		if (copy_from_user(&ec_lev, (void *)cdata->cfg.setting,
+			sizeof(int32_t))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		pr_debug("%s: Exposure compensation Value is %d",
+			__func__, ec_lev);
+		mt9v113_set_exposure_compensation(s_ctrl, ec_lev);
+		break;
+	}
+	case CFG_SET_EFFECT: {
+		int32_t effect_mode;
+		if (copy_from_user(&effect_mode, (void *)cdata->cfg.setting,
+			sizeof(int32_t))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		pr_debug("%s: Effect mode is %d", __func__, effect_mode);
+		mt9v113_set_effect(s_ctrl, effect_mode);
+		break;
+	}
+	case CFG_SET_ANTIBANDING: {
+		int32_t antibanding_mode;
+		if (copy_from_user(&antibanding_mode,
+			(void *)cdata->cfg.setting,
+			sizeof(int32_t))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		pr_debug("%s: anti-banding mode is %d", __func__,
+			antibanding_mode);
+		mt9v113_set_antibanding(s_ctrl, antibanding_mode);
+		break;
+	}
+	case CFG_SET_BESTSHOT_MODE: {
+		int32_t bs_mode;
+		if (copy_from_user(&bs_mode, (void *)cdata->cfg.setting,
+			sizeof(int32_t))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		pr_debug("%s: best shot mode is %d", __func__, bs_mode);
+		/*mt9v113_set_scene_mode(s_ctrl, bs_mode);*/
+		break;
+	}
+	case CFG_SET_WHITE_BALANCE: {
+		int32_t wb_mode;
+		if (copy_from_user(&wb_mode, (void *)cdata->cfg.setting,
+			sizeof(int32_t))) {
+			pr_err("%s:%d failed\n", __func__, __LINE__);
+			rc = -EFAULT;
+			break;
+		}
+		pr_debug("%s: white balance is %d", __func__, wb_mode);
+		mt9v113_set_white_balance_mode(s_ctrl, wb_mode);
+		break;
+	}
+	default:
+		rc = -EFAULT;
+		break;
+	}
+
+	mutex_unlock(s_ctrl->msm_sensor_mutex);
+
+	return rc;
+}
+
+static struct msm_sensor_fn_t mt9v113_sensor_func_tbl = {
+	.sensor_config = mt9v113_sensor_config,
+	.sensor_power_up = msm_sensor_power_up,
+	.sensor_power_down = msm_sensor_power_down,
+};
+
+static struct msm_sensor_ctrl_t mt9v113_s_ctrl = {
+	.sensor_i2c_client = &mt9v113_sensor_i2c_client,
+	.power_setting_array.power_setting = mt9v113_power_setting,
+	.power_setting_array.size = ARRAY_SIZE(mt9v113_power_setting),
+	.msm_sensor_mutex = &mt9v113_mut,
+	.sensor_v4l2_subdev_info = mt9v113_subdev_info,
+	.sensor_v4l2_subdev_info_size = ARRAY_SIZE(mt9v113_subdev_info),
+	.func_tbl = &mt9v113_sensor_func_tbl,
+};
+
+module_init(mt9v113_init_module);
+module_exit(mt9v113_exit_module);
+MODULE_DESCRIPTION("Aptina 0.3MP YUV sensor driver");
+MODULE_LICENSE("GPL v2");
-- 
1.7.4.1

