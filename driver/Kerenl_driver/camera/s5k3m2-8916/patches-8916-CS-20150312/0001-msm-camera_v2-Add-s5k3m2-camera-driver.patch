From f7f4c4ec306255ebf2e924f296fa5bae64315da0 Mon Sep 17 00:00:00 2001
From: zhangss <zhangss1028@thundersoft.com>
Date: Thu, 12 Mar 2015 10:48:20 +0800
Subject: [PATCH] msm: camera_v2: Add s5k3m2 camera driver.

Add s5k3m2 camera driver for msm8939.

Change-Id: I8dd03469f2338552a15d762e5e45dab467e797d0
Signed-off-by: Shaosong Zhang <zhangss1028@thundersoft.com>
---
 .../dts/qcom/msm8916-camera-sensor-qrd-skui.dtsi   | 90 +++++++++++++++++++++-
 .../msm/camera_v2/sensor/actuator/msm_actuator.c   | 25 +++++-
 include/media/msm_cam_sensor.h                     |  1 +
 3 files changed, 112 insertions(+), 4 deletions(-)

diff --git a/arch/arm/boot/dts/qcom/msm8916-camera-sensor-qrd-skui.dtsi b/arch/arm/boot/dts/qcom/msm8916-camera-sensor-qrd-skui.dtsi
index 8eb45a1..9f5aeb1 100644
--- a/arch/arm/boot/dts/qcom/msm8916-camera-sensor-qrd-skui.dtsi
+++ b/arch/arm/boot/dts/qcom/msm8916-camera-sensor-qrd-skui.dtsi
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -111,7 +111,7 @@
 		qcom,csid-sd-index = <0>;
 		qcom,mount-angle = <90>;
 		qcom,actuator-src = <&actuator0>;
-		qcom,eeprom-src = <&eeprom0>;
+		qcom,eeprom-src = <&eeprom1>;
 		qcom,led-flash-src = <&led_flash0>;
 		cam_vdig-supply = <&pm8916_l2>;
 		cam_vana-supply = <&pm8916_l17>;
@@ -189,4 +189,88 @@
 		clock-names = "cam_src_clk", "cam_clk";
 	};
 
-};
\ No newline at end of file
+	eeprom1: qcom,eeprom@6d{
+		cell-index = <0>;
+		reg = <0x5a>;
+		qcom,eeprom-name = "sunny_f13s01k";
+		compatible = "qcom,eeprom";
+		qcom,slave-addr = <0x5a>;
+		qcom,cci-master = <0>;
+		qcom,num-blocks = <12>;
+
+		qcom,page0 = <1 0x0136 2 0x1800 2 1>;
+		qcom,poll0 = <0 0x0 2 0 1 1>;
+		qcom,mem0 = <0 0x0 2 0 1 0>;
+		qcom,page1 = <1 0x0304 2 0x0006 2 1>;
+		qcom,poll1 = <0 0x0 2 0 1 1>;
+		qcom,mem1 = <0 0x0 2 0 1 0>;
+		qcom,page2 = <1 0x0306 2 0x0073 2 1>;
+		qcom,poll2 = <0 0x0 2 0 1 1>;
+		qcom,mem2 = <0 0x0 2 0 1 0>;
+		qcom,page3 = <1 0x030c 2 0x0004 2 1>;
+		qcom,poll3 = <0 0x0 2 0 1 1>;
+		qcom,mem3 = <0 0x0 2 0 2 0>;
+		qcom,page4 = <1 0x030e 2 0x0064 2 1>;
+		qcom,poll4 = <0 0x0 2 0 1 1>;
+		qcom,mem4 = <0 0x0 2 0 1 0>;
+		qcom,page5 = <1 0x0302 2 0x0001 2 1>;
+		qcom,poll5 = <0 0x0 2 0 1 1>;
+		qcom,mem5 = <0 0x0 2 0 1 0>;
+		qcom,page6 = <1 0x0300 2 0x0004 2 1>;
+		qcom,poll6 = <0 0x0 2 0 1 1>;
+		qcom,mem6 = <0 0x0 2 0 1 0>;
+		qcom,page7 = <1 0x030a 2 0x0001 2 1>;
+		qcom,poll7 = <0 0x0 2 0 1 1>;
+		qcom,mem7 = <0 0 2 0 1 0>;
+		qcom,page8 = <1 0x0308 2 0x0008 2 1>;
+		qcom,poll8 = <0 0x0 2 0 1 1>;
+		qcom,mem8 = <0 0 2 0 1 0>;
+		qcom,page9 = <1 0x0100 2 0x0100 2 20>;
+		qcom,poll9 = <0 0x0 2 0 1 1>;
+		qcom,mem9 = <0 0 2 0 1 0>;
+		qcom,page10 = <1 0x0a02 2 0x1f00 2 10>;
+		qcom,poll10 = <0 0x0 2 0 1 1>;
+		qcom,mem10 = <0 0 2 0 1 0>;
+		qcom,page11 = <1 0x0a00 2 0x0100 2 1>;
+		qcom,poll11 = <0 0x0 2 0 1 1>;
+		qcom,mem11 = <64 0x0a04 2 0 1 0>;
+
+		cam_vdig-supply = <&pm8916_l2>;
+		cam_vana-supply = <&pm8916_l17>;
+		cam_vio-supply = <&pm8916_l6>;
+		cam_vaf-supply = <&pm8916_l10>;
+		qcom,cam-vreg-name = "cam_vdig", "cam_vio", "cam_vana",
+							"cam_vaf";
+		qcom,cam-vreg-type = <0 1 0 0>;
+		qcom,cam-vreg-min-voltage = <1200000 0 2850000 2800000>;
+		qcom,cam-vreg-max-voltage = <1200000 0 2850000 2800000>;
+		qcom,cam-vreg-op-mode = <200000 0 80000 100000>;
+		pinctrl-names = "cam_default", "cam_suspend";
+		pinctrl-0 = <&cam_sensor_mclk0_default &cam_sensor_rear_default>;
+		pinctrl-1 = <&cam_sensor_mclk0_sleep &cam_sensor_rear_sleep>;
+		gpios = <&msm_gpio 26 0>,
+			<&msm_gpio 35 0>,
+			<&msm_gpio 34 0>;
+		qcom,gpio-reset = <1>;
+		qcom,gpio-standby = <2>;
+		qcom,gpio-req-tbl-num = <0 1 2 >;
+		qcom,gpio-req-tbl-flags = <1 0 0>;
+		qcom,gpio-req-tbl-label = "CAMIF_MCLK",
+			"CAM_RESET1",
+			"CAM_STANDBY";
+
+		qcom,cam-power-seq-type = "sensor_vreg",
+			"sensor_gpio", "sensor_gpio",
+			"sensor_clk";
+		qcom,cam-power-seq-val = "cam_vaf",
+			"sensor_gpio_reset",
+			"sensor_gpio_standby",
+			"sensor_cam_mclk" ;
+		qcom,cam-power-seq-cfg-val = <1 1 1 23880000>;
+		qcom,cam-power-seq-delay = <1 10 10 5>;
+
+		clocks = <&clock_gcc clk_mclk0_clk_src>,
+			<&clock_gcc clk_gcc_camss_mclk0_clk>;
+		clock-names = "cam_src_clk", "cam_clk";
+	};
+};
diff --git a/drivers/media/platform/msm/camera_v2/sensor/actuator/msm_actuator.c b/drivers/media/platform/msm/camera_v2/sensor/actuator/msm_actuator.c
index ae92c35..f40d9e3 100644
--- a/drivers/media/platform/msm/camera_v2/sensor/actuator/msm_actuator.c
+++ b/drivers/media/platform/msm/camera_v2/sensor/actuator/msm_actuator.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2011-2014, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2011-2015, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -116,6 +116,29 @@ static void msm_actuator_parse_i2c_params(struct msm_actuator_ctrl_t *a_ctrl,
 				i2c_byte1 = (value & 0xFF00) >> 8;
 				i2c_byte2 = value & 0xFF;
 			}
+		} else if (write_arr[i].reg_write_type ==
+			MSM_ACTUATOR_WRITE_AK7348) {
+			value = (next_lens_position <<
+				write_arr[i].data_shift) |
+				((hw_dword & write_arr[i].hw_mask) >>
+				write_arr[i].hw_shift);
+				i2c_byte1 = write_arr[i].reg_addr;
+				i2c_byte2 = value;
+				if (size != (i+1)) {
+					i2c_byte2 = (value & 0x1FF) >> 1;
+					CDBG("byte1:0x%x, byte2:0x%x\n",
+						i2c_byte1, i2c_byte2);
+					i2c_tbl[a_ctrl->i2c_tbl_index].
+						reg_addr = i2c_byte1;
+					i2c_tbl[a_ctrl->i2c_tbl_index].
+						reg_data = i2c_byte2;
+					i2c_tbl[a_ctrl->i2c_tbl_index].
+						delay = 0;
+					a_ctrl->i2c_tbl_index++;
+					i++;
+					i2c_byte1 = write_arr[i].reg_addr;
+					i2c_byte2 = (value & 0x1) << 7;
+			}
 		} else {
 			i2c_byte1 = write_arr[i].reg_addr;
 			i2c_byte2 = (hw_dword & write_arr[i].hw_mask) >>
diff --git a/include/media/msm_cam_sensor.h b/include/media/msm_cam_sensor.h
index 67cbb2e..bcdd0e0 100755
--- a/include/media/msm_cam_sensor.h
+++ b/include/media/msm_cam_sensor.h
@@ -640,6 +640,7 @@ struct msm_actuator_cfg_data {
 enum msm_actuator_write_type {
 	MSM_ACTUATOR_WRITE_HW_DAMP,
 	MSM_ACTUATOR_WRITE_DAC,
+	MSM_ACTUATOR_WRITE_AK7348,
 };
 
 struct msm_actuator_reg_params_t {
-- 
1.9.1

