From 3c62d97eaf2cd3c05253037e7374f4547dbfb240 Mon Sep 17 00:00:00 2001
From: chenx <chenxiang0527@thundersoft.com>
Date: Fri, 22 May 2015 11:13:48 +0800
Subject: [PATCH 1/3] drivers:input:misc: support mpu6050 driver

Driver support mpu6050

Change-Id: Idce0600586c6922aa96a391855d0ca6c8abbd20d
Signed-off-by: Xiang Chen <chenxiang0527@thundersoft.com>
---
 .../devicetree/bindings/input/misc/mpu6050.txt     |    4 ++++
 drivers/input/misc/mpu6050.c                       |   24 ++++++++++++++++----
 drivers/input/misc/mpu6050.h                       |    2 +-
 3 files changed, 25 insertions(+), 5 deletions(-)

diff --git a/Documentation/devicetree/bindings/input/misc/mpu6050.txt b/Documentation/devicetree/bindings/input/misc/mpu6050.txt
index 316b598..113d7c1 100644
--- a/Documentation/devicetree/bindings/input/misc/mpu6050.txt
+++ b/Documentation/devicetree/bindings/input/misc/mpu6050.txt
@@ -19,6 +19,8 @@ Required properties:
 				"Landscape Right Back Side": Landscape Right (back side view)
 				"Portrait Down Back Side": Portrait Down (back side view)
 				"Landscape Left Back Side": Landscape Left (back side view)
+-invn,accel_poll_ms	:The poll_delay time of the accel.
+-invn,gyro_poll_ms	:The poll_delay time of the gyro.
 
 Optional properties:
 
@@ -38,5 +40,7 @@ Example:
 			vdd-supply = <&pm8916_l6>;
 			vi2c-supply = <&pm8916_l16>;
 			invn,place = "Portrait Up";
+			invn,accel_poll_ms = <200>;
+			invn,gyro_poll_ms = <200>;
 		};
 	};
diff --git a/drivers/input/misc/mpu6050.c b/drivers/input/misc/mpu6050.c
index c33a9f9..22406c8 100644
--- a/drivers/input/misc/mpu6050.c
+++ b/drivers/input/misc/mpu6050.c
@@ -1,7 +1,7 @@
 /*
  * MPU6050 6-axis gyroscope + accelerometer driver
  *
- * Copyright (c) 2014, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -1637,7 +1637,10 @@ static int mpu6050_parse_dt(struct device *dev,
 			struct mpu6050_platform_data *pdata)
 {
 	int rc;
-
+	unsigned int tmp;
+	struct device_node *np = dev->of_node;
+	struct mpu6050_sensor *sensor;
+	sensor = dev_get_drvdata(dev);
 	rc = mpu6050_dt_get_place(dev, pdata);
 	if (rc)
 		return rc;
@@ -1652,6 +1655,19 @@ static int mpu6050_parse_dt(struct device *dev,
 	pdata->use_int = of_property_read_bool(dev->of_node,
 				"invn,use-interrupt");
 
+	rc = of_property_read_u32(np, "invn,accel_poll_ms", &tmp);
+	 if (rc) {
+		dev_err(dev, "Unable to read accel_poll_ms.\n");
+		return rc;
+	}
+	sensor->accel_poll_ms = tmp;
+
+	rc = of_property_read_u32(np, "invn,gyro_poll_ms", &tmp);
+	 if (rc) {
+		dev_err(dev, "Unable to read gyro_poll_ms.\n");
+		return rc;
+	}
+	sensor->gyro_poll_ms = tmp;
 	return 0;
 }
 #else
@@ -1786,8 +1802,8 @@ static int mpu6050_probe(struct i2c_client *client,
 	sensor->gyro_dev->name = MPU6050_DEV_NAME_GYRO;
 	sensor->accel_dev->id.bustype = BUS_I2C;
 	sensor->gyro_dev->id.bustype = BUS_I2C;
-	sensor->accel_poll_ms = MPU6050_ACCEL_DEFAULT_POLL_INTERVAL_MS;
-	sensor->gyro_poll_ms = MPU6050_GYRO_DEFAULT_POLL_INTERVAL_MS;
+	/*sensor->accel_poll_ms = MPU6050_ACCEL_DEFAULT_POLL_INTERVAL_MS;
+	sensor->gyro_poll_ms = MPU6050_GYRO_DEFAULT_POLL_INTERVAL_MS;*/
 
 	input_set_capability(sensor->accel_dev, EV_ABS, ABS_MISC);
 	input_set_capability(sensor->gyro_dev, EV_ABS, ABS_MISC);
diff --git a/drivers/input/misc/mpu6050.h b/drivers/input/misc/mpu6050.h
index f60c018..c6a86d1 100644
--- a/drivers/input/misc/mpu6050.h
+++ b/drivers/input/misc/mpu6050.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
-- 
1.7.9.5

